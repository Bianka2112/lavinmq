name: Debian packages
on:
  pull_request:
    paths-ignore:
      - 'spec/**'
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
    paths:
      - .github/workflows/deb.yml
      - Dockerfile.deb
      - build/deb
      - shard.lock
      - src/**
      - static/**
      - openapi/**
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build_deb:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, debian-11]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set package version
        run: echo "PKG_VERSION=$(git describe --tags | cut -c2-)" >> $GITHUB_ENV

      - name: Set OS/Version env variables
        run: |
          echo "OS=$(echo ${{ matrix.os }} | cut -d- -f1)" >> $GITHUB_ENV
          echo "VERSION=$(echo ${{ matrix.os }} | cut -d- -f2)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build deb package
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha,scope=${{ github.workflow }}-${{ matrix.os }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}-${{ matrix.os }}
          file: Dockerfile.deb
          platforms: linux/amd64,linux/arm64
          build-args: |
            build_image=84codes/crystal:1.6.2-${{ matrix.os }}
            target_image=${{ env.OS }}:${{ env.VERSION }}
            pkg_version=${{ env.PKG_VERSION }}
          outputs: builds

      - uses: actions/upload-artifact@v3
        name: Upload artifact
        with:
          name: deb-packages
          path: builds

      - name: Upload to Packagecloud
        run: |
          set -eux
          curl -fsSO -u "${{ secrets.packagecloud_token }}:" https://packagecloud.io/api/v1/distributions.json
          for PKG_FILE in $(find builds -name "*.deb")
          do
            ID=$(echo $PKG_FILE | cut -d/ -f3)
            VERSION_CODENAME=$(echo $PKG_FILE | cut -d/ -f4)
            DIST_ID=$(jq ".deb[] | select(.index_name == \"${ID}\").versions[] | select(.index_name == \"${VERSION_CODENAME}\").id" distributions.json)
            curl -fsS -u "${{ secrets.packagecloud_token }}:" -XPOST \
              -F "package[distro_version_id]=${DIST_ID}" \
              -F "package[package_file]=@${PKG_FILE}" \
              https://packagecloud.io/api/v1/repos/${{ github.repository }}/packages.json
          done
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Upload to Packagecloud head repo
        run: |
          set -eux
          curl -fsSO -u "${{ secrets.packagecloud_token }}:" https://packagecloud.io/api/v1/distributions.json
          for PKG_FILE in $(find builds -name "*.deb")
          do
            ID=$(echo $PKG_FILE | cut -d/ -f3)
            VERSION_CODENAME=$(echo $PKG_FILE | cut -d/ -f4)
            DIST_ID=$(jq ".deb[] | select(.index_name == \"${ID}\").versions[] | select(.index_name == \"${VERSION_CODENAME}\").id" distributions.json)
            curl -fsS -u "${{ secrets.packagecloud_token }}:" -XPOST \
              -F "package[distro_version_id]=${DIST_ID}" \
              -F "package[package_file]=@${PKG_FILE}" \
              https://packagecloud.io/api/v1/repos/${{ github.repository }}-head/packages.json
          done
        if: github.ref == 'refs/heads/main'
